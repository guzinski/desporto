{% extends "DesportoBundle::layout.html.twig" %}
{% block title %}Desporto | Campeonato Detalhe{% endblock %}
{% block head %}
    
    <script src="{{ asset('bundles/desporto/js/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('bundles/desporto/js/jquery-datatables.responsive.js') }}"></script>
    <script src="//cdn.datatables.net/plug-ins/725b2a2115b/integration/bootstrap/3/dataTables.bootstrap.js"></script>
    <script src="{{ asset('bundles/desporto/js/select2.min.js') }}"></script>
    
    <script type="text/javascript">
        
        var quantidadeMinimaJogadores = {{ campeonato.quantidadeMinimaJogadores }};
        var quantidadeMaximaJogadores = {{ campeonato.quantidadeMaximaJogadores }};
        
        function defaultError(xhr, textStatus, errorThrown) {
            jQuery(".locked").fadeOut();
            bootbox.alert("Erro ao processar informação");
        }


        function finalizarInscricao() {
            jQuery(".locked").fadeIn();
            jQuery.post("{{ path("campeonato_finalizar_inscricao", {campeonato: campeonato.id}) }}", function(data) {
                
                if (data.finalizado) {
                    location. href = "{{ path('campeonato_detalhe', {campeonato: campeonato.id}) }}";
                } else {
                    jQuery(".locked").fadeOut();
                    bootbox.alert("É necessário inscrever todos os diretores, treinadores e o número mínimo de jagores em todas as equipes, para poder finaliar a inscrição.")
                }
                
                }, "json")
                .fail(defaultError);

            
            
        }

        
        function repoFormatResult(repo) {
           var markup = '<div class="row">' +
                            '<div class="col-sm-12"><span class="h5">' + repo.nome + '</span> (' + repo.cpf + ')</div>' +
                        '</div>';
           return markup;
        }

        function repoFormatSelection(repo) {
           return repo.nome;
        }
        
        function removerJogador(event) {
            event.stopImmediatePropagation();
            bootbox.confirm("Tem certeza que deseja remover este(a) jogador(a)?", function(result) {
                if (result) {
                    jQuery(event.currentTarget).closest('tr').remove();
                    if (jQuery("#jogadores tbody").children().length == 1) {
                        jQuery("#nenhum").show();
                    }
                }
            }); 
        }
        
        function adicionarJogador() {
            var jogador = jQuery("#jogador").val();
            var equipe  = jQuery("#equipe").val();
            var campeonato = {{ campeonato.id }};
            jQuery(".locked").fadeIn();
            jQuery.post("{{ path("campeonato_adicionar_jogador") }}", {jogador: jogador, equipe: equipe, campeonato: campeonato})
                    .done(function(html) {
                        jQuery("#nenhum").hide();
                        var row = jQuery("#jogadores").get(0).insertRow()
                        row.insertCell().innerHTML = jQuery("#jogadores tbody tr").length-1;
                        row.insertCell().innerHTML = html;
                        jQuery('#jogador').select2("val", "");
                        jQuery(".removerJogador").click(removerJogador);
                        if (jQuery("#jogadores tbody tr").length > quantidadeMaximaJogadores ) {
                            jQuery('#adicionarJogador').hide();
                            jQuery('#numeroMaximo').removeClass("hide");
                        }
                        jQuery(".locked").fadeOut();
                    })
                    .fail(defaultError);
        }


        function inscreverDiretor(idEquipe) {
            jQuery(".locked").fadeIn();
            var tipo = "{{ constant('DesportoBundle\\Entity\\EdicaoCampeonatoEquipeProfissional::DIRETOR') }}";
            jQuery.post("{{ path("campeonato_form_inscricao_profissional", {campeonato:  campeonato.id }) }}", {equipe: idEquipe, tipo: tipo})
                .done(callBackInscreverDiretor).fail(defaultError);
        }
        
        function inscreverTreinador(idEquipe) {
            jQuery(".locked").fadeIn();
            var tipo = "{{ constant('DesportoBundle\\Entity\\EdicaoCampeonatoEquipeProfissional::TREINADOR') }}"
            jQuery.post("{{ path("campeonato_form_inscricao_profissional", {campeonato:  campeonato.id }) }}", {equipe: idEquipe, tipo: tipo})
                .done(callBackInscreverTreinador).fail(defaultError);
        }

        function inscreverJogador(idEquipe) {
            jQuery(".locked").fadeIn();
            
            jQuery.post("{{ path("campeonato_form_inscricao_jogadores", {campeonato:  campeonato.id }) }}", {equipe: idEquipe})
                .done(callBackInscreverJogador).fail(defaultError);
        }
        
        
        function callBackInscreverJogador(html) {
            jQuery(".locked").fadeOut();
            bootbox.dialog({
                title: "Inscrever jogadores",
                size: "large",
                message: html,
                buttons: {
                    close: {
                        label: "Cancelar",
                        className: "btn-default",
                    },
                    success: {
                        label: "Inscrever",
                        className: "btn-success",
                        callback: function () {
                            if (jQuery("#jogadores tbody tr").length <= quantidadeMinimaJogadores) {
                                bootbox.alert("O campeonato exige pelo menos " + quantidadeMinimaJogadores + " Jogadores inscritos.");
                                return false;
                            } else {
                                jQuery(".locked").fadeIn();
                                jQuery.post("{{ path("campeonato_inscrever_jogadores", {"campeonato": campeonato.id} ) }}", jQuery("#formJogadores").serialize())
                                        .done(function(html) {
                                            jQuery(".locked").fadeOut();
                                            bootbox.alert("Jogadores inscritos com sucesso");
                                            location.href = "";
                                        })
                                        .fail(defaultError);
                            }
                        }
                    },
                }
            });
            jQuery("#jogador").select2({
                minimumInputLength: 1,
                ajax: {
                url: "{{ path('profissional_find_jogadores_disponiveis', {campeonato: campeonato.id}) }}",
                dataType: 'json',
                quietMillis: 250,
                data: function (term, page) { // page is the one-based page number tracked by Select2
                    return {
                        busca: term, //search term
                                campeonato:{{campeonato.id}},
                                equipe: jQuery("#equipe").val(),
                                inscritos: jQuery("input:hidden.inscritos").serializeArray()
                        };
                    },
                    results: function (data, page) {
                        var more = (page * 30) < data.total_count; // whether or not there are more results available

                        // notice we return the value of more so Select2 knows if more results can be loaded
                        return { results: data.items, more: more };
                    }
                },
                formatResult: repoFormatResult, // omitted for brevity, see the source of this page
                formatSelection: repoFormatSelection, // omitted for brevity, see the source of this page
                dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
                escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results            });
            });
            jQuery('.select2-container').css("width", "100%");
            jQuery("#adicionarJogador").click(adicionarJogador)
        }
        
        function callBackInscreverDiretor(html) {
            jQuery(".locked").fadeOut();
            bootbox.dialog({
                title: "Inscrever Diretor",
                size: "large",
                message: html,
                buttons: {
                    close: {
                        label: "Cancelar",
                        className: "btn-default",
                    },
                    success: {
                        label: "Inscrever",
                        className: "btn-success",
                        callback: function () {
                            
                            if (!jQuery("#profissional").val()) {
                                bootbox.alert("Selecione o Diretor");
                            } else {
                                jQuery(".locked").fadeIn();
                                jQuery.post("{{ path("campeonato_inscrever_profissional", {"campeonato": campeonato.id} ) }}", jQuery("#formJogadores").serialize())
                                        .done(function(html) {
                                            jQuery(".locked").fadeOut();
                                            bootbox.alert("Diretor inscrito com sucesso");
                                            location.href = "";
                                        })
                                        .fail(defaultError);
                            }
                            
                            
                        }
                    },
                }
            });
            jQuery("#profissional").select2({
                minimumInputLength: 1,
                ajax: {
                    url: "{{ path('profissional_find_diretores_disponiveis', {campeonato: campeonato.id}) }}",
                    dataType: 'json',
                    quietMillis: 250,
                    data: function (term, page) { // page is the one-based page number tracked by Select2
                    return {
                        busca: term, //search term
                                campeonato:{{campeonato.id}},
                                equipe: jQuery("#equipe").val(),
                                inscritos: jQuery("input:hidden.inscritos").serializeArray()
                        };
                    },
                    results: function (data, page) {
                        var more = (page * 30) < data.total_count; // whether or not there are more results available

                        // notice we return the value of more so Select2 knows if more results can be loaded
                        return { results: data.items, more: more };
                    }
                },
                formatResult: repoFormatResult, // omitted for brevity, see the source of this page
                formatSelection: repoFormatSelection, // omitted for brevity, see the source of this page
                dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
                escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results            });
            });
            jQuery('.select2-container').css("width", "100%");
            jQuery("#adicionarJogador").click(adicionarJogador)
        }
        
        function callBackInscreverTreinador(html) {
            jQuery(".locked").fadeOut();
            bootbox.dialog({
                title: "Inscrever Diretor",
                size: "large",
                message: html,
                buttons: {
                    close: {
                        label: "Cancelar",
                        className: "btn-default",
                    },
                    success: {
                        label: "Inscrever",
                        className: "btn-success",
                        callback: function () {
                            if (!jQuery("#profissional").val()) {
                                bootbox.alert("Selecione o Diretor");
                            } else {
                                jQuery(".locked").fadeIn();
                                jQuery.post("{{ path("campeonato_inscrever_profissional", {"campeonato": campeonato.id} ) }}", jQuery("#formJogadores").serialize())
                                        .done(function(html) {
                                            jQuery(".locked").fadeOut();
                                            bootbox.alert("Diretor inscrito com sucesso");
                                            location.href = "";
                                        })
                                        .fail(defaultError);
                            }
                        }
                    },
                }
            });
            jQuery("#profissional").select2({
                minimumInputLength: 1,
                ajax: {
                    url: "{{ path('profissional_find_treinadores_disponiveis', {campeonato: campeonato.id}) }}",
                    dataType: 'json',
                    quietMillis: 250,
                    data: function (term, page) { // page is the one-based page number tracked by Select2
                    return {
                        busca: term, //search term
                                campeonato:{{campeonato.id}},
                                equipe: jQuery("#equipe").val(),
                                inscritos: jQuery("input:hidden.inscritos").serializeArray()
                        };
                    },
                    results: function (data, page) {
                        var more = (page * 30) < data.total_count; // whether or not there are more results available

                        // notice we return the value of more so Select2 knows if more results can be loaded
                        return { results: data.items, more: more };
                    }
                },
                formatResult: repoFormatResult, // omitted for brevity, see the source of this page
                formatSelection: repoFormatSelection, // omitted for brevity, see the source of this page
                dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
                escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results            });
            });
            jQuery('.select2-container').css("width", "100%");
            jQuery("#adicionarJogador").click(adicionarJogador)
        }

        
        jQuery(document).ready(function(){
        
        

        });

    </script>
{% endblock %}
{% block mainpanel %}
    <div class="pageheader">
        <div class="media">
            <div class="pageicon pull-left">
                <i class="fa fa-th-list"></i>
            </div>
            <div class="media-body">
                <ul class="breadcrumb">
                    <li><a href="{{ path('index') }}"><i class="glyphicon glyphicon-home"></i></a></li>
                    <li><a href="#">Campeonatos</a></li>
                    <li>Convocação das Equipes</li>
                </ul>
                <h4>Convocação das Equipes > {{ campeonato.campeonato.nome }} ({{ campeonato.edicao }})</h4>
            </div>
        </div><!-- media -->
    </div><!-- pageheader -->
    <div class="contentpanel">
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <h5 class="lg-title mb5">Convocação das equipes</h5>
                <p class="">É necessário informar um número mínimo de jogadores para cada equipe, antes de começar o campeonato..</p>
                <div class="table-responsive">
                    <table class="table ">
                        <thead>
                            <tr>
                                <th>Equipe</th>
                                <th>Diretor</th>
                                <th>Treinador</th>
                                <th>Inscritos</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for equipe in campeonato.equipes %}
                                <tr>
                                    <td><h5>{{ equipe.nome }}</h5></td>
                                    {% if equipe.getDiretor(campeonato) is null %}
                                    <td><button onclick="inscreverDiretor({{ equipe.id }});" class="btn btn-default btn-sm">Inscrever Diretor</button></td>
                                    {% else %}
                                    <td>{{ equipe.getDiretor(campeonato).nome }}</td>
                                    {% endif %}
                                    {% if equipe.getTreinador(campeonato) is null %}
                                    <td><button onclick="inscreverTreinador({{ equipe.id }});" class="btn btn-default btn-sm">Inscrever Treinador</button></td>
                                    {% else %}
                                    <td>{{ equipe.getTreinador(campeonato).nome }}</td>
                                    {% endif %}
                                    <td>{{ equipe.getJogadores(campeonato).count }}</td>
                                    {% if equipe.getJogadores(campeonato).count >= campeonato.quantidadeMaximaJogadores %}
                                    <td><strong>Máximo de Jogadores Inscritos</strong></td>
                                    {% else %}
                                    <td><button onclick="inscreverJogador({{ equipe.id }});" class="btn btn-default btn-sm">Inscrever jogadores</button></td>
                                    {% endif %}
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
                        
        <div>
            <button class="btn btn-primary pull-right" type="button" onclick="finalizarInscricao()">Finalizar Inscrição</button>
        </div>


    </div><!-- contentpanel -->
{% endblock %}
